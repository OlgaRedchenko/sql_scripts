
--задание1

select job_industry_category, count(customer_id)
from customer_20240101 c 
group by job_industry_category
order by count(customer_id) desc ;

--задание2

select extract (month from t.transaction_date) AS m , c.job_industry_category , sum(t.list_price)
from transaction_20240101 t inner join customer_20240101 c 
on t.customer_id = c.customer_id
group by m, c.job_industry_category 
order by m, c.job_industry_category ;

--задание3

select t.brand, count(t.transaction_id)
from transaction_20240101 t inner join customer_20240101 c 
on t.customer_id = c.customer_id
where t.online_order like 'True'
and t.order_status like 'Approved'
and c.job_industry_category like  'IT'
group by t.brand;

--задание4

select c.customer_id, c.first_name, c.last_name , sum(t.list_price), 
max(t.list_price), min(t.list_price), count(distinct(t.transaction_id))
from transaction_20240101 t inner join customer_20240101 c 
on t.customer_id = c.customer_id
group by c.customer_id, c.first_name, c.last_name;

select c.customer_id, c.first_name, c.last_name,
sum(t.list_price) over (partition by c.customer_id) as sum_price,
max(t.list_price) over (partition by c.customer_id) as max_price,
min(t.list_price) over (partition by c.customer_id) as min_price,
count(t.transaction_id) over (partition by c.customer_id) as count_transactions
from transaction_20240101 t inner join customer_20240101 c 
on t.customer_id = c.customer_id;

--задание5

with customer_max_sum as(
select  c.customer_id, c.first_name, c.last_name , sum(t.list_price)
from transaction_20240101 t inner join customer_20240101 c 
on t.customer_id = c.customer_id
group by c.customer_id, c.first_name, c.last_name
having sum(t.list_price) > (select max_price from
(select c.customer_id, 
sum(t.list_price) over (partition by c.customer_id) as max_price
from transaction_20240101 t inner join customer_20240101 c 
on t.customer_id = c.customer_id
order by max_price desc 
limit  1)))
select first_name, last_name
from customer_max_sum;

with customer_min_sum as(
select  c.customer_id, c.first_name, c.last_name , sum(t.list_price)
from transaction_20240101 t inner join customer_20240101 c 
on t.customer_id = c.customer_id
group by c.customer_id, c.first_name, c.last_name
having sum(t.list_price) = (select max_price from
(select c.customer_id, 
sum(t.list_price) over (partition by c.customer_id) as max_price
from transaction_20240101 t inner join customer_20240101 c 
on t.customer_id = c.customer_id
order by max_price  
limit  1)))
select first_name, last_name
from customer_min_sum;

--задание6

with combained_cte as(
select *,
row_number ()over (partition by c.customer_id order by t.transaction_date) as transaction_number
from transaction_20240101 t inner join customer_20240101 c 
on t.customer_id = c.customer_id
order by c.customer_id ,t.transaction_date)
select *
from combained_cte
where transaction_number = 1
;

--задание7

with temporary_table as(
select *,
lag(t.transaction_date) over (partition by c.customer_id) as transaction_intercal
from transaction_20240101 t inner join customer_20240101 c 
on t.customer_id = c.customer_id)

select distinct first_name, last_name, job_title
from temporary_table
where transaction_intercal = (select max(transaction_intercal)
from temporary_table);



